 -- ###EXPERIMENTAL### Fire this with a Start Cue with a 1s Post Wait Ð the name of the Start Cue will be logged to a text file along with the time of day-- Best run as a separate processset userLogsFolder to false -- Default behaviour is to create log files on the Desktop; to override, enter a path to a different folder here (it needs to exist)(* The easiest way to get the path is to select the folder in the Finder, press alt-cmd-C and paste the resulting path as a "string" above, replacing 'false' *)set userCommonLogFile to false -- Default behaviour is to write a new log file each day and log workspaces in separate files;(* if you want to have a single ongoing file that logs all workspaces, change this variable to the name of the file, eg: "QLab Log" *)set userFileText to " | Logged Events | " -- Set the text to be inserted into the filename between workspace name and today's date, if in that default mode-- Get cue that started this Script Cue and get the timetell application id "com.figure53.QLab.4" to tell front workspace	try		set startCueName to q list name of item -3 of (active cues as list) -- This bit only works if this script is inside a Group Cue!	on error		set startCueName to false	end tryend tellset logTime to do shell script "date '+%d-%m-%y %T'"-- Declarationsglobal dialogTitleset dialogTitle to "Log event to file"-- Check userLogsFolder existsif userLogsFolder is false then -- Default to the Desktop	set logsFolder to path to desktopelse	try		tell application "System Events"			set logsFolder to path of folder userLogsFolder -- This will throw an error if the folder doesn't exist		end tell	on error		display dialog "The folder \"" & userLogsFolder & "\" can not be accessed; please revisit userLogsFolder variable." with title dialogTitle with icon 0 Â			buttons {"OK"} default button "OK"		return	end tryend if-- Get info for the logtell application id "com.figure53.QLab.4" to tell front workspace	set workspaceName to q number	if startCueName is false then		set theMessage to "**** Start Cue name not captured ****"	else		set theMessage to startCueName	end if	if userCommonLogFile is not false then		set theMessage to workspaceName & tab & theMessage	end ifend tell-- Get variables for file namingset fileDate to do shell script "date '+%y-%m-%d'"if userCommonLogFile is false then	set theFilePath to POSIX path of logsFolder & workspaceName & userFileText & fileDate & ".txt"else	set theFilePath to POSIX path of logsFolder & userCommonLogFile & ".txt"end if-- Write to the log	do shell script "echo " & logTime & tab & quoted form of theMessage & " >> " & quoted form of theFilePath